Project trajectory snapshot (pared)

Theme: Give operators explicit control over AI changes with clear gates and reversible edits. Grow a native chat that pairs proposals with diffs; keep headless runs safe by default.

Active threads (current)
- Commit isolation + gates (active): Conversation/narrative commits must exclude unrelated staged changes and pause at a Pending Commit gate (TUI/CLI). [Depends on: auditor/vcs utilities; TUI/CLI UX not fully landed]
- Control levers surface (trimmed): Add basic config levers that matter now (history_limit, confirm_destructive, auto_commit, non_interactive, model params) and reflect them in prompt/meta. Keep advanced contract levers out for now. [Snapshot Status: config still minimal]
- Operation history + revert (active): Record applied changes and allow revert; prefer patch, fall back to VCS. [No code yet]
- Native Chat + Diff/editor basics (active): Split-view with diff and editable commit message; per-hunk accept/reject planned; show current LLM session settings. Streaming markers are nice-to-have, not a blocker.
- Integration tests (active): Guard commit isolation, config→CLI mapping, and (as they land) history/revert.

Recent, landed (evidence-based)
- Integration tests added/stabilized; CI runs them. [tests/, workflow]
- Auditor fixes: staged-set isolation during conversation commits; vcs helpers for stage/unstage/snapshot/restore across A/M/D/R. [vizier-core/src/{auditor.rs,vcs.rs}]
- Editor lifecycle hardened: run_editor uses ExitReason; editor channel scoped to a single session to prevent leakage. [vizier-core/src/{editor.rs,tools.rs}]

What’s explicitly not in scope now (deferred or removed)
- Narrative contract/drift enforcement and pre-commit hook: deferred until core levers + commit gate land. Remove strict contract levers from immediate plan.
- Full streaming/event observer timeline: keep minimal streaming visibility optional; no event timeline right now.

Acceptance checkpoints (kept)
- With confirm_destructive=true and auto_commit=false, writes pause at a Pending Commit gate (TUI/CLI). Reject leaves workspace untouched.
- Conversation commits touch only .vizier paths; pre-existing staged changes are preserved and restored exactly. A/M/D/R covered.
- CLI non-interactive refuses to commit without explicit consent (e.g., --yes with message) and never opens an editor.
- TUI shows history list and can revert the last accepted change once history lands.

Next moves (minimal, sequential)
1) Config: add essential levers + Default; expose to prompt/meta. [vizier-core/src/config.rs, display.rs]
2) CLI: add flags for those levers; validation + set_config. [vizier-cli/src/main.rs]
3) Commit gate UX: TUI split-view shows diff + editable message with Accept/Reject; CLI launches $EDITOR proposal file in interactive; headless requires --yes + message. [tui/chat.rs, cli/main.rs]
4) History skeleton: record applied operations and expose revert(n=1). [vizier-core history + tools]
5) Tests: extend to cover flags mapping and commit gate behaviors.
