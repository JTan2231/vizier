Project trajectory snapshot

Theme: Give operators precise, explicit control over the AI’s levers and its footprint on the workspace, with reversible operations and clear gates.

Active threads
- Control levers in Config: Expand vizier-core/src/config.rs to express model-level params, safety gates, and history capacity, while remaining backward compatible. [Supersedes prior drifted snapshot threads]
- CLI/TUI surface area: Flags and UI affordances must map 1:1 to config, exposing confirmation gates and visibility of current settings.
- Operation history + reversibility: First-class Operation records with ring buffer, confirmation workflow, and revert via stored patches or git.
- Headless discipline: Non-interactive runs require explicit allowlists; defaults lean safe.
- Narrative contract + drift guardrails: System prompt embeds contract; auditor/vcs enforce alignment between code and snapshot/TODOs.

Recent decisions
- Config will own: model, temperature, top_p, max_tokens, system_prompt_overrides, history_limit, confirm_destructive, auto_commit, enable_snapshots, non_interactive_mode.
- System prompt gains a <config> section (no secrets) so the model operates within declared constraints; add <narrative_contract> with snapshot hash and active TODOs when contract levers are enabled.
- CLI will add flags mapping to the new config surface; numeric ranges validated with safe fallbacks and warnings.
- History layer stores minimal patches and metadata; revert prefers patch apply, falls back to VCS.
- Contract strictness is configurable (advisory→strict) and can warn/block on drift at pre-commit.

Acceptance checkpoints
- vizier --temperature 0.7 --history-limit 10 --non-interactive --no-auto-commit updates the prompt’s <meta><config> and enforces confirmation gates per allowlist.
- TUI shows history and can revert last operation.
- Non-interactive run fails fast on destructive ops unless explicitly allowed.
- System prompt includes <narrative_contract> and auditor surfaces NarrativeDrift when code changes without paired snapshot/TODO updates (blockable by config).

Next concrete moves
1) config.rs: Add fields + Default, map legacy provider/force_action, and implement get_system_prompt() embedding <config> and optional <narrative_contract>.
2) vizier-cli main.rs: Add flags, parse, validate, merge, and set_config().
3) vizier-core history.rs (new) + tools.rs hooks: Operation struct, ring buffer, record/require_confirmation/revert APIs; expose to TUI/CLI.
4) vizier-tui: Status line for LLM settings, confirmation prompts, and History sidebar with revert.
5) CLI README: JSON schema for headless control and --config-json merge semantics.
6) auditor.rs + vcs.rs: Narrative drift checks and optional pre-commit hook utility aligned with contract strictness.

Status since last update
- Code state confirms config surface is still minimal (provider/force_action) and get_system_prompt builds <meta> with fileTree/todos/cwd only; no <config> or contract yet (vizier-core/src/config.rs, display.rs).
- COMMIT_PROMPT centralized in vizier-core; CLI still needs flags/control levers and history/revert surfaces.
- Snapshot/TODO process consolidation in .vizier is current source of truth; older parallel TODOs were pruned. Contract/guardrail TODO introduced to keep narrative/code aligned.
